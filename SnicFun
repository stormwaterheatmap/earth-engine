/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var image = ee.Image("NASA/ASTER_GED/AG100_003"),
    image2 = ee.Image("USGS/NED"),
    image3 = ee.Image("users/cnilsen/TSSLoad"),
    image4 = ee.Image("users/cnilsen/Runoff1980s5m"),
    imageVisParam = {"opacity":1,"bands":["sum_mean"],"min":104.44167480468751,"max":939.9750732421875,"palette":["f3e79b","fac484","f8a07e","eb7f86","ce6693","a059a0","5c53a5"]},
    table = ee.FeatureCollection("users/cnilsen/Sammamish/LJWatershed");
/***** End of imports. If edited, may not auto-convert in the playground. *****/

var regression = require('users/cnilsen/TNC:regressions/Zinc')
var utils = require('users/gena/packages:utils')
Map.addLayer(regression.Zinc,{},'Zinc')
var scale = 100
var crs = 'EPSG:3857'

// generate seeds using a hexagonal grid (crs and scale are optional)
var size = 35 // in scale points
var grid = utils.generateHexagonalSeeds(size, crs, scale)//.focal_max(2)
var ndvi = image.select('ndvi')

function uSnic(image, size, compactness) {
var  userSnic = ee.Algorithms.Image.Segmentation.SNIC(
    {image: image,
    size: size,
    compactness: compactness, 
      neighborhoodSize: 48
    });
return userSnic
}




//make panel; size, compactness 
var sizeSlide = ui.Slider(0,96,5,1)
var compactnessSlide = ui.Slider(0,16,1,1)

sizeSlide.style().set('width', '100%');
compactnessSlide.style().set('width', '100%')
//button to rerun the analysis 
var snicButton = ui.Button({label: 'Begin clustering', 
onClick: function() {
  print('click!')
  map.clear()
  print( sizeSlide.getValue())
  print( compactnessSlide.getValue())
  var layer = uSnic(image2, sizeSlide.getValue(), compactnessSlide.getValue())
  var clusters = layer.select(0)
  map.addLayer(clusters.randomVisualizer(),{},'clusters')
  var meanVals = layer.select(1)
  map.addLayer(meanVals, {},'mean vals')
}
})

//panel to hold controls 
var controlPan = ui.Panel({style: 
{width: '400px'}
}); 

controlPan.add(ui.Label('Size'))
.add(sizeSlide)
.add(ui.Label('compactness'))
.add(compactnessSlide)
.add(snicButton)
//Map.add(controlPan)
//grid size 
// Set up the overall structure of the app, with a control panel to the left
// of a full-screen map.
ui.root.clear();
var panel = controlPan;
var map = ui.Map();
ui.root.add(panel).add(map);



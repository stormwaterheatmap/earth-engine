var data  = require('users/stormwaterheatmap/apps:data/data_dictionary.js')

var nms = Object.keys(data.vector_dict)
print(nms)


var PS_AU = ee.FeatureCollection(
 "projects/ee-stormwaterheatmap/assets/Puget_Sound_Assessment_Units_string")
var NHDPlus = ee.FeatureCollection("projects/ee-stormwaterheatmap/assets/NHDPlus_High_Resolution_Watershed_Dataset_string"
)

var HUC12 = ee.FeatureCollection(
   "projects/ee-stormwaterheatmap/assets/huc12")
/** 
 * This script generates average values for all predictors 
 * used in the stormwater heatmap 
 * It will be used as input to the credibility interval calculation script.
 */

// Import predicter images 
var predictors = require('users/stormwaterheatmap/coc_layers:scaled_predictors')
predictors = predictors.scaled_predictors

// make a reducer function to average predictors in a featureCollection 
function reduce_to_sheds(shedFc){
 
  
var reduced_predictors = predictors.reduceRegions({
    reducer: ee.Reducer.mean(),
    scale: 10,
    collection: shedFc, // featureCollection of watersheds 
}) 
//var feat_out = reduced_predictors.select({propertySelectors: ['huc12','devAge2','grass',
//'paved','pm25_na','sqrt_CO2_road','traffic'],retainGeometry:false})
return reduced_predictors
}

function export_tables(fc,name){
var feat_out = reduce_to_sheds(fc)

Export.table.toCloudStorage({
  collection:feat_out, 
  description: name, 
  bucket:'gs://swhm-table-exports', fileFormat:'CSV', 
  fileNamePrefix: name
})
}
var i = 1
//var sheds_selectors = ['Watershed Name']

var sheds = data.vector_dict[nms[i]]
var filename = nms[i].replace(/[^a-z0-9]/gi, '_').toLowerCase();
print(filename)
var feat_out_test = reduce_to_sheds(sheds)
print(feat_out_test)
export_tables(sheds,filename)
/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* displayProperties: [
      {
        "type": "rectangle"
      }
    ] */
    ee.Geometry.Polygon(
        [[[-122.33131193787504, 47.817373473468436],
          [-122.33131193787504, 47.77401389443029],
          [-122.26402067810942, 47.77401389443029],
          [-122.26402067810942, 47.817373473468436]]], null, false);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
//ui.root.clear();

//sandbox 
ui.root.setLayout(ui.Panel.Layout.absolute());

// data 
/*Load modules 
---------------------------------------------------------------------------------------------------- 
*/

var data  = require('users/stormwaterheatmap/apps:data/data_dict.js')
var Style = require('users/stormwaterheatmap/apps:Modules/Style')
var charts = require('users/stormwaterheatmap/apps:Modules/chart.js')
var legends = require('users/stormwaterheatmap/apps:Modules/legends')
var helpers = require('users/stormwaterheatmap/apps:Modules/helpers')
var fonts = Style.fonts
var input_layers = data.rasters["Input Data Layers"]
var hydrology_layers = data.rasters["Hydrology Data Layers"]
print(ee.Dictionary(hydrology_layers))
var layerProperties = ee.Dictionary(input_layers).combine(hydrology_layers)
print("layerProperties",layerProperties.get("Land Use"))
var data = require('users/stormwaterheatmap/apps:data/data_dict.js')
var Style = require('users/stormwaterheatmap/apps:Modules/Style')
var helpers = require('users/stormwaterheatmap/apps:Modules/helpers')
print(data)
var fonts = Style.fonts 

var rasters = data.rasters
var layer_types = Object.keys(rasters)
var test_list = (Object.keys(rasters["Input Data Layers"]))

var vectors = data.vector_dict
print(Object.keys(vectors))
var sel = ui.Select({items: Object.keys(vectors).sort(), onChange: print_selected }) 
Map.add(sel)
function print_selected(value) {
 var laytoshow = vectors[value]
 Map.addLayer(laytoshow)
  print ("change", value)
}

print(input_layers)
var objectMerge = function(){
    var out = {};
    if(!arguments.length)
        return out;
    for(var i=0; i<arguments.length; i++) {
        for(var key in arguments[i]){
            out[key] = arguments[i][key];
        }
    }
    return out;
}
var layerProperties = objectMerge(input_layers,hydrology_layers) 
print(layerProperties)
//Select image 
var imgtest = layerProperties.Precipitation

print(imgtest.layer.name)
var chart = charts.littleNum(imgtest,
        geometry, Map.getScale(), 'mean')
Map.add(chart)


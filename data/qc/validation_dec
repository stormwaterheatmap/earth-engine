/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var sheds = ee.FeatureCollection("projects/ee-swhm/assets/model_validation/validation_sheds_rev");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var preds = require('users/stormwaterheatmap/apps:data/export_predictor_layers.js')
print(sheds)
var predictors=preds.predictor_stack_raw

Map.addLayer(predictors) 

var convolved_predictors = convolve_predictors(predictors) 
Map.addLayer(convolved_predictors)

//print(convolved_predictors.bandNames())
function reduce_to_sheds(shedFc){
var reduced_predictors = convolved_predictors.reduceRegions({
    reducer: ee.Reducer.mean(),
    scale: 10,
    collection: shedFc, 
})
return reduced_predictors
}

function convolve_predictors(image) {
    var convolved_predictors = image.
    reduceNeighborhood({
        skipMasked: true,
        reducer: ee.Reducer.mean(),
        kernel: ee.Kernel.gaussian({
            radius: 45,
            sigma: 15,
            units: 'meters'
        })
    })

    //var convolved_clamped = convolved_predictors.clamp(-3, 3) //clamp to 3 standard deviations 
    return convolved_predictors
}

var results = reduce_to_sheds(sheds)
//print(results.first())
var keep_props = 
  [
    "Name",
    "layer",
  "CO2_road_mean",
  "devAge2_mean",
  "grass_mean",
  "paved_mean",
  "pm25_na_mean",
  "sqrt_CO2_road_mean",
  "sqrt_traffic_mean",
  "traffic_mean"
]

print(results)

var filtered_results = ee.FeatureCollection(results).map(function(f){return f.select(keep_props)})

print(filtered_results)
Export.table.toDrive(filtered_results)
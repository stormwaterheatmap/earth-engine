/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var roi = ee.FeatureCollection("projects/ee-swhm/assets/production_feature_collections/PugetSoundWA"),
    image = ee.Image("MODIS/MOD44W/MOD44W_005_2000_02_24"),
    image2 = ee.Image("projects/ee-swhm/assets/production_layers/Imperviousness"),
    imageCollection = ee.ImageCollection("USDA/NASS/CDL");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var landcover = require('users/stormwaterheatmap/apps:data/layer_generation/landcover.js').landcover 
// Label	Raster value	Colors
// Forest/Trees	0	#55775e#55775e
// Pasture	1	#dacd7f#dacd7f
// Grass	2	#7e9e87#7e9e87
// Water	3	#b3caff#b3caff
// Impervious-roof	4	#844c8b#844c8b
// Impervious-nonRoof	5	#ead1ff#ead1ff

// reclass for hspf landcover types 
var cropland = ee.Image('USDA/NASS/CDL/2020').select('cultivated').eq(2)//gt(0)
var hspf_land_cover = landcover.remap([0,1,2,3,4,5,6,7],[9,2,2,0,2,3,5,5])
var hspf_mask = landcover.neq(0)
hspf_land_cover = hspf_land_cover.updateMask(hspf_mask)
hspf_land_cover = hspf_land_cover.where(cropland,1)
Map.addLayer(hspf_land_cover)


var imperv = landcover.gte(6).multiply(100).float()
exports.imperviousness = imperv

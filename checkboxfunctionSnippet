function hline(pan) {
 pan.add( ui.Label( 
   {value:'null',
   style:{
  //width:'100%',
  height: '0px',
   padding: '0px ',
   margin: '0px 0px 0px 0px',
   border:  '0.5px solid gray',
   stretch:'horizontal',
   }}
   ));
}
//add all layers to map 
var props = require('users/stormwaterheatmap/apps:Modules/layerProperties')
var style = require('users/stormwaterheatmap/apps:Modules/Style')
var layerProperties = props.layerProperties
print(layerProperties)
print(style.fonts)

//make a list of layers 
var layerList = Object.keys(layerProperties)
var size = Object.keys(layerProperties).length
print(layerList)
print(size)

//function to add layer to Map 
var addBaseLayer = function(keyName){
  var layerItem = layerProperties[keyName]
  Map.addLayer({
    eeObject: layerItem.layer, 
    visParams: {palette: layerItem.palette,
                min: layerItem.minMax[0], 
                max: layerItem.minMax[1], 
    },
    name: keyName,
    shown: false})
}; 
//function to make checkboxes 
var checkbox = function (index) {
  var layer = selectItems[index]
  addBaseLayer(layer);
  var layerItem = layerProperties[layer]
  var cb = ui.Checkbox({
    label: layer, 
    value: 0, 
    style:{
     margin: '0px',
      padding: '4px',
      fontSize: '10px'
    }
  })
  cb.onChange(function(checked) {
  // Shows or hides the first map layer based on the checkbox's value.
    Map.layers().get(index).setShown(checked);
  print(checked)
  }); 
  return cb
}; 

//function to build checkbox panel 
var checkPanel = function(){
 var widList = [
    ui.Label('Legend'), 
    ui.Label('Precipitation'), 
    checkbox(1),
    checkbox(0), 
    checkbox(4), 
    checkbox(9)
        ]
  var panel = ui.Panel(widList)
  Map.add(panel)
}

var selectItems = Object.keys(layerProperties)
print(selectItems)
addBaseLayer(selectItems[0]);
checkPanel()


/*var t3 = selectItems[0]
print(t3)
print()

//var addlayer = function(keyvalue)
//get the legend from a layer 

var brute = layerProperties.Loss.visParams.palette
print(brute)
var layer1 = layerProperties[t3]
print(layer1)
var palGet = layer1.visParams.palette
print(palGet)*/



/*addBaseLayer(layerProperties.DevAge)
addBaseLayer(layerProperties.GAP)
//addBaseLayer(layerProperties.HRUs)
addBaseLayer(layerProperties.Imperviousness)
//addBaseLayer(layerProperties.Population)
addBaseLayer(layerProperties.Precipitation)
//addBaseLayer(layerProperties.Slopes)
//addBaseLayer(layerProperties.Soils)
//addBaseLayer(layerProperties.landUse)
addBaseLayer(layerProperties.landcover)
var testPanel = ui.Panel({
  style: {
    width: '280px', //height: '80%', 
    position: 'bottom-right', 
    padding: '4px',
    margin: 0,
    fontSize: '10px'
  }
})
//check boxes ui.Checkbox(label, value, onChange, disabled, style)
var checkbox = function (name, index) {
  var cb = ui.Checkbox({
    label: name, 
    value: 0, 
    style:{
     margin: '0px',
      padding: '4px',
      fontSize: '10px'
    }
  })
  cb.style().set(style.fonts.Body3)
  cb.onChange(function(checked) {
  // Shows or hides the first map layer based on the checkbox's value.
  Map.layers().get(index).setShown(checked);
});
      return cb
}
var headingLabel = ui.Label({
  value: 'Precipitation and Hydrology', style: {
  margin: 0, 
  padding: 0
}}); 
headingLabel.style().set(style.fonts.H4)
var headingLabel2 = ui.Label({
  value: 'Land use and Land cover',
  style: {
  margin: 0, 
  padding: 0,
    fontSize: '10px'
  }
})
var cb0 = checkbox(layerProperties.DevAge.layerName, 0)
var cb1 = checkbox(layerProperties.GAP.layerName, 1)
var cb2 = checkbox(layerProperties.HRUs.layerName, 2)
var cb3 = checkbox(layerProperties.Imperviousness.layerName, 3)
var cb4 = checkbox(layerProperties.Population.layerName, 4)
var cb5 = checkbox(layerProperties.Precipitation.layerName, 5)
var cb6 = checkbox(layerProperties.Slopes.layerName, 6)
var cb7 = checkbox(layerProperties.Soils.layerName, 7)
var cb8 = checkbox(layerProperties.landUse.layerName, 8)
var cb9 = checkbox(layerProperties.landcover.layerName, 9 )
testPanel.add(headingLabel)
hline(testPanel)
testPanel.add(cb0).add(cb1).add(cb2).add(cb3).
add(headingLabel2)
hline(testPanel)
testPanel.add(cb4).add(cb5).add(cb6).add(cb7).add(cb8).add(cb9)
Map.add(testPanel)
*/




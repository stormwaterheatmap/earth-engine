/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = 
    /* color: #d63000 */
    /* shown: false */
    ee.Geometry.Point([-122.29463348396649, 47.4460200728852]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
/* /Map with clickable heatmap layers showing: 
1. Landcover 
2. Hydrology 
   a. Mean annual runoff 
   b. Flow Duration Index 
   c. HRUs 
    - soils 
    - slopes
    - HSPF Landcover  
3. Water Quality  
  a. Predictors 
  b. One constituent. 
*/ 
//Load Datasets from the dataset module 
var featureStyle = {
    color: 'black',
    fillColor: '00000000',
    //lineType: 'dashed'
}
var datasets = require("users/stormwaterheatmap/OGD:OGD_datav2");
var vectors = datasets.vectors
var rasters = datasets.rasters
var ogdBounds = vectors.studyArea.union()
var watersheds = datasets.vectors.PS_AU
// var data = require('users/stormwaterheatmap/apps:Modules/datasets')
var Style = require('users/stormwaterheatmap/apps:Modules/Style')
// var charts = require('users/stormwaterheatmap/apps:Modules/chart')
var legends = require('users/stormwaterheatmap/apps:Modules/legends')
var fonts = Style.fonts //var panelStyle = Style.panelStyle//print(panelStyle)
var infoPanel = ui.Panel()
var colors = Style.colors
///----------------------------------------------------------------------
///---functions
// Apply a non-linear stretch to the population data for visualization.

var wsStyle = {
    color: '#1778A2',
    fillColor: '1778A266',
    lineType: 'dotted', 
    width: 1
}
var cityStyle = {
    color: 'black',
    fillColor: 'FF000000',
    lineType: 'dashed', 
    width: 1.5
    
}

var datasets = require("users/stormwaterheatmap/OGD:OGD_datav2");
var vectors = datasets.vectors
var rasters = datasets.rasters
print(vectors)

var SeaTac = vectors.cities.filterBounds(geometry)
var kcBounds =  ee.FeatureCollection(vectors['KingCountyHUC14'].filterBounds(SeaTac))
print(kcBounds)
Map.addLayer(kcBounds.style(wsStyle))
Map.addLayer(SeaTac.style(cityStyle))
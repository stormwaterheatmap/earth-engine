/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var NED = ee.Image("USGS/NED"),
    precip = ee.Image("users/stormwaterheatmap/meanAnnual_precip"),
    image = ee.Image("users/stormwaterheatmap/soils"),
    image2 = ee.Image("users/stormwaterheatmap/q1980sbyHRU"),
    image3 = ee.Image("JRC/GHSL/P2016/BUILT_LDSMT_GLOBE_V1");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// ---------------------------
// Author: Christian Nilsen, Geosyntec Consultants 
// Email: cnilsen@geosyntec.com
// Date Created: 2019-07-19
// ---------------------------
//This program is free software: you can redistribute it and/or modify
//it under the terms of the GNU General Public License as published by
//the Free Software Foundation, version 3.0 
//
//This program is distributed in the hope that it will be useful,
//but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//GNU General Public License for more details.
//For a copy of the GNU General Public License 
//  see <https://www.gnu.org/licenses/>.
// ---------------------------

//Image Collections 
var populationDataset = ee.ImageCollection('CIESIN/GPWv4/population-count');
var population = populationDataset.select('population-count');
exports.population = population

//
//exports.landuse = 

//exports.landcover = 

exports.soils = ee.Image("users/stormwaterheatmap/soils");

//Generate slopes from USGS DEM 
var thresholds = ee.Image([5.0, 15, 100]);
exports.slope = ee.Terrain.slope(NED).gt(thresholds).reduce('sum'); 

exports.mean_annual_runoff_byHRU = ee.Image("users/stormwaterheatmap/q1980sbyHRU");

//exports.imperv = 

//exports.hrus = 

exports.age_of_development = ee.Image('JRC/GHSL/P2016/BUILT_LDSMT_GLOBE_V1').select('built');

exports.population2020 = population.filter(ee.Filter.eq('system:index', '2020')).first();

exports.precip = precip.select('b0').resample(); 
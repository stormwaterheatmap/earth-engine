/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var GHSL = ee.Image("JRC/GHSL/P2016/BUILT_LDSMT_GLOBE_V1");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var NHD = ee.FeatureCollection(
    'users/cnilsen/PugetSoundNHDPlusWatersheds');
print(NHD.first())
var PugetSound = ee.FeatureCollection("users/stormwaterheatmap/tables/PugetSound")
var NHDminMax = NHD.filterBounds(PugetSound).reduceColumns(ee.Reducer.minMax(), ['GRIDCODE'])
//.reduceToImage(['GRIDCODE'],ee.Reducer.first())//.subtract(505191).divide(17767)
//var vals = NHD.reduceRegion(ee.Reducer.minMax(),PugetSound.geometry())//
var nlcd = ee.Image("USGS/NLCD/NLCD2016").select('landcover')
///output from above
var minMax = {
  "max": 522961,
  "min": 314885
}
var wsImage = NHD.reduceToImage(['GRIDCODE'],ee.Reducer.first())//.unitScale(NHDminMax.get('min'),NHDminMax.get('max'))
Map.addLayer(wsImage)
var built = GHSL.select('built')//.unitScale(1,6)
var seeds = ee.Algorithms.Image.Segmentation.seedGrid(32, 'hex')

var snic = ee.Algorithms.Image.Segmentation.SNIC({
  image: ee.Image.cat(wsImage), 
  size: 32,
  compactness: 16,
  //connectivity: 8,
  neighborhoodSize:256,
  seeds: seeds
})//.select(["R_mean", "G_mean", "B_mean", "N_mean", "clusters"], ["R", "G", "B", "N", "clusters"])
var clusters = snic.select("clusters")
Map.addLayer(clusters.randomVisualizer(), {}, "clusters",1)
Map.addLayer(snic)
print(Map.getScale())